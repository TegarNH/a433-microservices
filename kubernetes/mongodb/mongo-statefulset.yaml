# Tegar Naufal Hanip - tegarnauf_19

# Menggunakan API Kubernetes versi 'apps/v1'.
# Penggunaan versi 'apps/v1' dikarenakan object StatefulSet memiliki API group-nya sendiri sehingga bukan bagian dari API inti.
apiVersion: apps/v1

# Menentukan Kubernetes object yang digunakan, yaitu StatefulSet
kind: StatefulSet

# Informasi mengenai resource StatefulSet
metadata:
  # Mendefinisikan nama dari StatefulSet
  name: karsajobs-db
  # Mendefinisikan label seperti nama label dan tier yang digunakan oleh StatefulSet
  labels:
    app: karsajobs
    tier: backend

# Menentukan spesifikasi dari StatefulSet
spec:
  # Menentukan selector untuk mengidentifikasi StatefulSet
  selector:
    # selector yang digunakan yaitu yang memiliki label app karsajobs dan tier backend
    matchLabels:
      app: karsajobs
      tier: backend

  # Mendefinisikan nama service untuk menghubungkan dengan StatefulSet
  serviceName: karsajobs-db
  # Menentukan replica (jumlah Pod yang identik) dari pod berjumlah 1
  replicas: 1
  # Menentukan jumlah detik yang harus dilewati sebelum pod dianggap siap
  minReadySeconds: 10

  # Menentukan template pod seperti metadata dan spec
  template:
    # Metadata dari template pod (sama dengan metadata labels sebelumnya)
    metadata:
      labels:
        app: karsajobs
        tier: backend

    # Menentukan spesifikasi untuk Pod
    spec:
      # Menentukan jumlah detik untuk menghentikan dirinya sendiri sebelum dihentikan paksa
      terminationGracePeriodSeconds: 10

      # Mendefinisikan container yang akan berjalan di dalam Pod.
      containers:
        # nama dari cointainer
        - name: mongo
          # menggunakan image dari docker hub
          image: mongo:latest
          # menambahkan env yang digunakan pada container, USERNAME dan PASSWORD diambil dari '/etc/mongo-credentials'
          env:
            - name: MONGO_INITDB_ROOT_USERNAME_FILE
              value: /etc/mongo-credentials/MONGO_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD_FILE
              value: /etc/mongo-credentials/MONGO_ROOT_PASSWORD
          # mendefisikan port yang akan digunakan container (port 27017 adalah default port mongodb)
          ports:
            - name: mongo
              containerPort: 27017
          # Menentukan mount point untuk volume yang akan digunakan oleh container
          volumeMounts:
            # Untuk Persistent Volume
            - name: mongo-persistent-storage
              mountPath: /data/db
            # Untuk ConfigMap
            - name: mongo-config
              mountPath: /config
            # Untuk Secret
            - name: mongo-secret
              mountPath: /etc/mongo-credentials

      # Mendefinisikan volume yang akan digunakan oleh Pod
      volumes:
        # Volume Persistent Volume
        - name: mongo-persistent-storage
          # Mengaitkan volume dengan PersistentVolumeClaim
          persistentVolumeClaim:
            claimName: mongo-pv-claim

        # Volume ConfigMap
        - name: mongo-config
          # Mengaitkan volume dengan ConfigMap
          configMap:
            name: mongo-config
            items:
              # Mengambil key dari mongo.conf
              - key: mongo.conf
                # Mengambil value dari mongo.conf yang berisi 'dbPath:/data/db'
                path: mongo.conf

        # Volume Secret
        - name: mongo-secret
          # Mengaitkan volume dengan Secret
          secret:
            secretName: mongo-secret
